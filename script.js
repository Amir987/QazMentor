// =========================
// ENT Mentor - MAIN SCRIPT
// =========================

// ---------- REGISTRATION ----------
document.addEventListener("DOMContentLoaded", () => {
  const registerForm = document.getElementById("registerForm");
  if (registerForm) {
    registerForm.addEventListener("submit", (e) => {
      e.preventDefault();

      const fullname = document.getElementById("fullname").value.trim();
      const email = document.getElementById("email").value.trim();
      const password = document.getElementById("password").value.trim();
      const confirm = document.getElementById("confirm").value.trim();

      if (!fullname || !email || !password || !confirm) {
        showError("–ë–∞—Ä–ª—ã“õ ”©—Ä—ñ—Å—Ç–µ—Ä–¥—ñ —Ç–æ–ª—Ç—ã—Ä—ã“£—ã–∑!");
        return;
      }

      if (!email.includes("@") || !email.includes(".")) {
        showError("–î“±—Ä—ã—Å email –µ–Ω–≥—ñ–∑—ñ“£—ñ–∑!");
        return;
      }

      if (password.length < 6) {
        showError("“ö“±–ø–∏—è —Å”©–∑ –µ“£ –∫–µ–º—ñ 6 —Ç–∞“£–±–∞–¥–∞–Ω —Ç“±—Ä—É—ã –∫–µ—Ä–µ–∫!");
        return;
      }

      if (password !== confirm) {
        showError("“ö“±–ø–∏—è —Å”©–∑–¥–µ—Ä —Å”ô–π–∫–µ—Å –∫–µ–ª–º–µ–π–¥—ñ!");
        return;
      }

      const user = { fullname, email, password };
      localStorage.setItem("entUser", JSON.stringify(user));

      const btn = document.querySelector(".btn");
      btn.textContent = "–¢—ñ—Ä–∫–µ–ª—É–¥–µ...";
      btn.disabled = true;
      btn.style.opacity = "0.7";

      setTimeout(() => {
        alert("–¢—ñ—Ä–∫–µ–ª—É —Å”ô—Ç—Ç—ñ ”©—Ç—Ç—ñ ‚úÖ");
        window.location.href = "goal.html";
      }, 1000);
    });
  }
});

// ---------- SHOW ERROR ----------
function showError(message) {
  let existing = document.querySelector(".error-msg");
  if (existing) existing.remove();

  const div = document.createElement("div");
  div.className = "error-msg";
  div.style.background = "rgba(255,0,0,0.1)";
  div.style.border = "1px solid rgba(255,0,0,0.4)";
  div.style.padding = "10px 15px";
  div.style.borderRadius = "8px";
  div.style.marginBottom = "15px";
  div.style.textAlign = "center";
  div.style.color = "#ff4d4d";
  div.textContent = message;

  const form = document.getElementById("registerForm");
  form.insertBefore(div, form.firstChild);

  setTimeout(() => {
    if (div) div.remove();
  }, 3000);
}

// ---------- GOAL PAGE ----------
document.addEventListener("DOMContentLoaded", () => {
  const goalRange = document.getElementById("goalRange");
  const goalValue = document.getElementById("goalValue");
  const emoji = document.getElementById("emoji");
  const saveGoal = document.getElementById("saveGoal");

  if (!goalRange || !goalValue || !emoji || !saveGoal) return;

  // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–º–∞–π–ª–∏–∫–∞ –∏ –∑–Ω–∞—á–µ–Ω–∏—è
  goalRange.addEventListener("input", () => {
    const val = parseInt(goalRange.value);
    goalValue.textContent = val;

    if (val < 60) emoji.textContent = "üòê";
    else if (val < 90) emoji.textContent = "üôÇ";
    else if (val < 120) emoji.textContent = "üòé";
    else emoji.textContent = "üî•";
  });

  // –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ü–µ–ª–∏ –∏ –ø–µ—Ä–µ—Ö–æ–¥ –Ω–∞ –≥–ª–∞–≤–Ω—É—é
  saveGoal.addEventListener("click", () => {
    const val = goalRange.value;
    localStorage.setItem("entGoal", val);

    saveGoal.textContent = "–ñ“Ø–∫—Ç–µ–ª—É–¥–µ...";
    saveGoal.disabled = true;
    saveGoal.style.opacity = "0.8";

    setTimeout(() => {
      window.location.href = "home.html";
    }, 1000);
  });
});

// ---------- HOME PAGE ----------
document.addEventListener("DOMContentLoaded", () => {
  const user = JSON.parse(localStorage.getItem("entUser"));
  const goal = localStorage.getItem("entGoal");

  const userName = document.getElementById("userName");
  const userGoal = document.getElementById("userGoal");

  if (userName && user) userName.textContent = user.fullname;
  if (userGoal && goal) userGoal.textContent = goal;

  const tabs = document.querySelectorAll(".nav-item");
  const sections = document.querySelectorAll(".tab-content");

  if (tabs.length) {
    tabs.forEach((tab) => {
      tab.addEventListener("click", () => {
        tabs.forEach((t) => t.classList.remove("active"));
        sections.forEach((s) => s.classList.remove("active"));
        tab.classList.add("active");
        document.getElementById(tab.dataset.tab).classList.add("active");
      });
    });
  }
});

// ---------- LANGUAGE SWITCH ----------
const translations = {
  kk: {
    register_title: "–¢—ñ—Ä–∫–µ–ª—É –±–µ—Ç—ñ",
    fullname: "–ê—Ç—ã-–∂”©–Ω—ñ“£–¥—ñ –µ–Ω–≥—ñ–∑",
    email: "–≠–ª–µ–∫—Ç—Ä–æ–Ω–¥—ã“õ –ø–æ—à—Ç–∞",
    password: "“ö“±–ø–∏—è —Å”©–∑",
    confirm: "“ö“±–ø–∏—è —Å”©–∑–¥—ñ —Ä–∞—Å—Ç–∞",
    register_btn: "–¢—ñ—Ä–∫–µ–ª—É",
    has_account: "–ê–∫–∫–∞—É–Ω—Ç—ã“£ –±–∞—Ä –º–∞?",
    login: "–ö—ñ—Ä—É",
    policy: "–¢—ñ—Ä–∫–µ–ª—É –∞—Ä“õ—ã–ª—ã —Å—ñ–∑ –±—ñ–∑–¥—ñ“£ <a href='#'>“õ“±–ø–∏—è–ª—ã“õ —Å–∞—è—Å–∞—Ç—ã–Ω–∞</a> –∫–µ–ª—ñ—Å–µ—Å—ñ–∑.",
    goal_title: "–ú–∞“õ—Å–∞—Ç—ã“£–¥—ã —Ç–∞“£–¥–∞ üéØ",
    goal_text: "–ï–ù–¢ –±–æ–π—ã–Ω—à–∞ ”©–∑—ñ“£–Ω—ñ“£ –º–∞“õ—Å–∞—Ç—Ç—ã –±–∞–ª–ª—ã“£–¥—ã –∫”©—Ä—Å–µ—Ç. –ë“±–ª —Å–µ–Ω—ñ –∞–ª“ì–∞ –∂–µ—Ç–µ–ª–µ–π–¥—ñ!",
    next_btn: "–ö–µ–ª–µ—Å—ñ “õ–∞–¥–∞–º",
    goal_info: "–ñ“Ø–π–µ —Ç–∞“£–¥–∞“ì–∞–Ω –º–∞“õ—Å–∞—Ç—ã“£–∞ —Å–∞–π –∂–µ–∫–µ –¥–∞–π—ã–Ω–¥—ã“õ –∂–æ—Å–ø–∞—Ä—ã–Ω “±—Å—ã–Ω–∞–¥—ã. –ê—Ä–º–∞–Ω“ì–∞ –∂–æ–ª ‚Äì –¥”ô–ª “õ–∞–∑—ñ—Ä –±–∞—Å—Ç–∞–ª–∞–¥—ã!"
  },
  ru: {
    register_title: "–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è",
    fullname: "–§–ò–û",
    email: "–≠–ª–µ–∫—Ç—Ä–æ–Ω–Ω–∞—è –ø–æ—á—Ç–∞",
    password: "–ü–∞—Ä–æ–ª—å",
    confirm: "–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å",
    register_btn: "–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è",
    has_account: "–£–∂–µ –µ—Å—Ç—å –∞–∫–∫–∞—É–Ω—Ç?",
    login: "–í–æ–π—Ç–∏",
    policy: "–†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É—è—Å—å, –≤—ã —Å–æ–≥–ª–∞—à–∞–µ—Ç–µ—Å—å —Å –Ω–∞—à–µ–π <a href='#'>–ø–æ–ª–∏—Ç–∏–∫–æ–π –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏</a>.",
    goal_title: "–í—ã–±–µ—Ä–∏ —Å–≤–æ—é —Ü–µ–ª—å",
    goal_text: "–£–∫–∞–∂–∏ —Ü–µ–ª–µ–≤–æ–π –±–∞–ª–ª –ø–æ –ï–ù–¢.",
    next_btn: "–î–∞–ª–µ–µ",
    goal_info: "–ü–æ–∑–∂–µ —Å–∏—Å—Ç–µ–º–∞ –ø—Ä–µ–¥–ª–æ–∂–∏—Ç –ø–ª–∞–Ω –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∏ –ø–æ–¥ —Ç–≤–æ—é —Ü–µ–ª—å."
  }
};

function applyLanguage(lang) {
  localStorage.setItem("lang", lang);
  const t = translations[lang];

  // –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è
  if (document.getElementById("registerForm")) {
    const h1 = document.querySelector("h1");
    if (h1) h1.textContent = t.register_title;
    const labels = {
      fullname: document.querySelector("label[for='fullname']"),
      email: document.querySelector("label[for='email']"),
      password: document.querySelector("label[for='password']"),
      confirm: document.querySelector("label[for='confirm']")
    };
    if (labels.fullname) labels.fullname.textContent = t.fullname;
    if (labels.email) labels.email.textContent = t.email;
    if (labels.password) labels.password.textContent = t.password;
    if (labels.confirm) labels.confirm.textContent = t.confirm;
    const btn = document.querySelector(".btn");
    if (btn) btn.textContent = t.register_btn;
  }

  // –¶–µ–ª—å
  if (document.getElementById("goalRange")) {
    const h1 = document.querySelector("h1");
    const p = document.querySelector("p");
    const btn = document.getElementById("saveGoal");
    const info = document.querySelector(".info");
    if (h1) h1.textContent = t.goal_title;
    if (p) p.textContent = t.goal_text;
    if (btn) btn.textContent = t.next_btn;
    if (info) info.textContent = t.goal_info;
  }
}

document.addEventListener("DOMContentLoaded", () => {
  const savedLang = localStorage.getItem("lang") || "kk";
  applyLanguage(savedLang);

  const langButtons = document.querySelectorAll(".lang-switch button");
  langButtons.forEach((btn) => {
    btn.addEventListener("click", () => {
      const lang = btn.textContent.trim() === "–†—É—Å—Å–∫–∏–π" ? "ru" : "kk";
      applyLanguage(lang);
    });
  });
});

// ---------- AI PSYCHOLOGIST CHAT (updated endpoint) ----------
(function() {
  const chatBox = document.querySelector(".chat-box") || document.getElementById("chatBox");
  const chatInput = document.getElementById("chatInput");
  const sendBtn = document.getElementById("sendMsgBtn") || document.querySelector(".chat-input button");

  if (!chatBox || !chatInput || !sendBtn) return;

  async function sendAiMessage() {
    const userMsg = chatInput.value.trim();
    if (!userMsg) return;

    const userBubble = document.createElement("div");
    userBubble.className = "chat-message user";
    userBubble.textContent = userMsg;
    chatBox.appendChild(userBubble);
    chatBox.scrollTop = chatBox.scrollHeight;
    chatInput.value = "";

    const aiBubble = document.createElement("div");
    aiBubble.className = "chat-message ai";
    aiBubble.textContent = "–ü—Å–∏—Ö–æ–ª–æ–≥ –¥—É–º–∞–µ—Ç...";
    chatBox.appendChild(aiBubble);
    chatBox.scrollTop = chatBox.scrollHeight;

    try {
      const messages = [
        { role: "system", content: "–¢—ã ‚Äî –¥—Ä—É–∂–µ–ª—é–±–Ω—ã–π –ò–ò-–ø—Å–∏—Ö–æ–ª–æ–≥, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–º–æ–≥–∞–µ—Ç —à–∫–æ–ª—å–Ω–∏–∫–∞–º –≥–æ—Ç–æ–≤–∏—Ç—å—Å—è –∫ –ï–ù–¢. –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–π, –º–æ—Ç–∏–≤–∏—Ä—É–π, –æ—Ç–≤–µ—á–∞–π –∫–æ—Ä–æ—Ç–∫–æ, –ø–æ–Ω—è—Ç–Ω–æ –∏ —Ç–µ–ø–ª–æ." },
        { role: "user", content: userMsg }
      ];

      const response = await fetch("/.netlify/functions/chat", {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({ messages }),
      });

      const data = await response.json();
      const reply = data.choices?.[0]?.message?.content || data.reply || "–û—à–∏–±–∫–∞ –≤ –æ—Ç–≤–µ—Ç–µ üòî";
      aiBubble.textContent = reply;
      chatBox.scrollTop = chatBox.scrollHeight;
    } catch (err) {
      aiBubble.textContent = "–û—à–∏–±–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å –ò–ò üòî";
      chatBox.scrollTop = chatBox.scrollHeight;
    }
  }

  sendBtn.addEventListener("click", sendAiMessage);
  chatInput.addEventListener("keydown", (e) => {
    if (e.key === "Enter") sendAiMessage();
  });
})();
